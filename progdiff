#!/bin/bash
#
# Diff the output of a candidate program against a solution program.
#
# Usage: progdiff solution candidate [ -o 'options' ]
#    -o default string of options required by the solution and candidate programs to generate 
#       the required output

usage() {                                                       # print usage message & terminate
    echo "Usage: $(basename "$0") solution candidate [ -o 'options' ]" >&2
    exit 1
}

if [ "${#}" -lt 2 ]; then
    usage
fi

solution="${1}"
shift

type "${solution}" &> /dev/null
if [ "${?}" -ne 0 ]; then                                       # solution program exists ?
   echo "program \"${solution}\" cannot be run" >&2	
   exit 1
fi

candidate="${1}"
shift

type "${candidate}" &> /dev/null
if [ "${?}" -ne 0 ]; then                                       # candidate program exists ?
   echo "program \"${candidate}\" cannot be run" >&2	
   exit 1
fi

options=""
while [ ${#} -gt 0 ]; do                                        # process command-line arguments
    case "${1}" in
    '-o') options="${2}"; shift ;;                              # options ?		
    *) 
    esac
    shift
done

prefix="test-$RANDOM"                                           # generate random prefix for test

touch "${prefix}.in"                                            # hack: pass empty input file to regress

$("${solution}" ${options} < "${prefix}.in" > "${prefix}.out")

regress "${candidate}" -o "${options}" -p "${prefix}"

rc="${?}"

# Clean up
rm "${prefix}.in"
rm "${prefix}.out"

exit $rc
